#!/usr/bin/env ruby

require 'vault'
require 'fileutils'

destination = ARGV[0]
source = JSON.parse STDIN.read

host = source['source']['host']
token = source['source']['token']
secret = source['source']['secret']

Vault.configure do |config|
  config.address = host
  config.token = token
  config.ssl_verify = false
end

dataobj = Vault.logical.read secret

begin
  data = dataobj.data[:data]
  if data.nil?
    data = dataobj.data
  end
rescue
  raise "Secret not available"
end

metadata = []
begin
  meta = dataobj.data[:metadata]
  metadata << meta unless meta.nil?
  version = meta[:version]
rescue
  version = Time.now.to_i
end

basename = File.basename(secret)
dirname = File.dirname(secret)
begin
  FileUtils.mkdir_p File.join(destination, dirname)
rescue Errno::EEXIST
end

open(File.join(destination, dirname, basename + '.json'), 'w') { |f| f.puts data.to_json }

ret = {version: {id: "#{version}"}, metadata: metadata}.to_json
puts ret
